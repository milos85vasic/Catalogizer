// Generated by Dagger (https://dagger.dev).
package com.catalogizer.android.data.repository;

import com.catalogizer.android.data.local.MediaDao;
import com.catalogizer.android.data.remote.CatalogizerApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MediaRepository_Factory implements Factory<MediaRepository> {
  private final Provider<CatalogizerApi> apiProvider;

  private final Provider<MediaDao> mediaDaoProvider;

  public MediaRepository_Factory(Provider<CatalogizerApi> apiProvider,
      Provider<MediaDao> mediaDaoProvider) {
    this.apiProvider = apiProvider;
    this.mediaDaoProvider = mediaDaoProvider;
  }

  @Override
  public MediaRepository get() {
    return newInstance(apiProvider.get(), mediaDaoProvider.get());
  }

  public static MediaRepository_Factory create(Provider<CatalogizerApi> apiProvider,
      Provider<MediaDao> mediaDaoProvider) {
    return new MediaRepository_Factory(apiProvider, mediaDaoProvider);
  }

  public static MediaRepository newInstance(CatalogizerApi api, MediaDao mediaDao) {
    return new MediaRepository(api, mediaDao);
  }
}
